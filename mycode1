# Python3 program to solve


def findMinDiff(arr, n, m):
    # if there are no chocolates or number
    # of students is 0
    if (m == 0 or n == 0):
        return 0

    # Sort the given packets
    arr.sort()

    # Number of students cannot be more than
    # number of packets
    if (n < m):
        return -1

    # Largest number of chocolates
    min_diff = arr[n - 1] - arr[0]

    # Find the subarray of size m such that
    # difference between last (maximum in case
    # of sorted) and first (minimum in case of
    # sorted) elements of subarray is minimum.
    for i in range(len(arr) - m + 1):
        min_diff = min(min_diff, arr[i + m - 1] - arr[i])

    return min_diff




# Driver Code
if __name__ == "__main__":
    goodies_prices = {"Fitbit Plus": 7980, "IPods": 22349, "MI Band": 999, "Cult Pass": 2799, "Macbook Pro": 229900,
                      "Digital Camera": 11101, "Alexa": 9999, "Sandwich Toaster": 2195, "Microwave Oven": 9800,
                      "Scale": 4999}
    # sorted values
    arr = sorted(goodies_prices.values())
    m = int(input("number of employees:\n"))
    n = len(arr)
    print("And the difference between the chosen goodie with highest price and the lowest price ", findMinDiff(arr, n, m))
    min1=findMinDiff(arr, n, m)
